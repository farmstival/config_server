server:
  port: 3000

spring:
  cloud:
    gateway:
      default-filters: #필터 추가, 중복 제거
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - 'http://joyfarm.xyz'
              - 'http://www.joyfarm.xyz'
              - 'http://joyfarm.xyz:4000'
              - 'http://www.joyfarm.xyz:4000'
              - "http://front.joyfarm.xyz:4000'
            allowCredentials: true # 요청시 인증 정보 전송 허가
            allowedHeaders: '*' #헤더 전체 허용
            allowedMethods: '*' #메서드 전체 허용
      discovery.locator:
        enabled: true
        lowerCaseServiceId: true

      routes:
        - id: api-service
          uri: lb://api-service
          predicates:
            - Path=/api/v1/**
          filters:
            - RewritePath=/api/v1/?(?<path>.*),/$\{path}

        - id: admin-service
          uri: lb://admin-service
          predicates:
            - Path=/admin/**
          filters:
            - RewritePath=/admin/?(?<path>.*),/$\{path}

        - id: email-service
          uri: lb://email-service
          predicates:
            - Path=/email/**
          filters:
            - RewritePath=/email/?(?<path>.*),/$\{path}

# 유레카 설정
eureka:
  instance:
    hostname: ${hostname}
    # preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${eurekaHost}/eureka/

# 액추에이터 설정
management:
  endpoint:
    gateway:
      enabled: true

  endpoints:
    web:
      exposure:
        include: gateway
